## BASH ##

# Create file containing the tags and the sequences of all the sequences in Gnify30 (subset of ESM atlas)
paste -d '\n' highquality_clust30_h highquality_clust30 > highqualityclust30_tags_and_sequences


## PYTHON ##
import argparse
from tqdm import tqdm  # Import tqdm for the progress bar
parser = argparse.ArgumentParser(description="Create a file that contains the folds")
parser.add_argument("--fold", required=True, help="Insert the file that associates folds and sequences")
parser.add_argument("--alignment", required=True, help="Insert the file that contains alignment results")
parser.add_argument("--output", required=True, help="Insert the name of the new file")
args = parser.parse_args()

# Step 1: Read in the contents of both files
with open(args.alignment, 'r') as f1, open(args.fold, 'r') as f2:
    first_lines = f1.readlines()
    second_lines = f2.readlines()

# Step 2: Parse the second file into a dictionary
folds_dict = {}
for line in second_lines:
    seq_id, fold = line.split()
    folds_dict[seq_id] = fold

# Step 3-5: Loop through the first file and add the fold information
with open(args.output, 'w') as f_out:
    with tqdm(total=len(first_lines), desc="Processing") as pbar:
        for line in first_lines:
            cols = line.split()
            seq1_id, seq2_id = cols[0], cols[1]
            seq1_fold = folds_dict.get(seq1_id, 'NA')
            seq2_fold = folds_dict.get(seq2_id, 'NA')
            new_line = '\t'.join([cols[0], cols[1], seq1_fold, seq2_fold, cols[2], cols[3], cols [4], cols[6], cols[7], cols[8], cols[9], cols[10]]) + '\n'
            f_out.write(new_line)
            pbar.update(1)

print("Processing complete!")


## BASH ##

# Convert it to fasta format
awk 'NR % 2 == 1 {print ">" $0; next} 1' tags_and_sequences_with_a_hit_in_scope > tags_and_sequences_with_a_hit_in_scope_fasta
# Remove any possible hidden character in the database
tr -cd '\11\12\15\40-\176' < tags_and_sequences_with_a_hit_in_scope_fasta > tags_and_sequences_with_a_hit_in_scope_fasta_nohiddencharacters
