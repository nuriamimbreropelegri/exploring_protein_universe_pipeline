## BASH
# 1. Filtering by e-value < 10^-5
awk '$(NF-1) < 0.00001' resultsdb.m8 > scope_esmatlas_filtered_by_e_value

# 2. Filtering by alignment lenght > 20 aa
 awk '$4 > 20' scope_esmatlas_filtered_by_e_value > scope_esmatlas_filtered_by_e_value_and_alignment_lenght

# 3. Filtering by hssp curve
## PYTHON

import math
def calculate_identity_threshold(length, pid):
    if length <= 11:
        threshold = pid - 100
        #print("lenght  <= 11")
    elif length <= 450 and length >11:
        threshold = pid - (480 * math.pow(length, (-0.32) * (1 + math.exp(-length /1000))))
        #print("the other value is")
        #print((480 * math.pow(length, (-0.32) * (1 + math.exp(-length /1000)))))
        #print("length <= 450 and length >11")
    else:
        threshold = pid - 19.5
        #print("lenght >450")
    #print("threshold " + str(threshold))
    return threshold
   
def filter_alignments(input_filename, output_filename):
    with open(input_filename, 'r') as input_file:
        lines = input_file.readlines()
        filtered_alignments = []

        for line in lines:
            fields = line.strip().split('\t')
            alignment_length = int(fields[3])
            identity = float(fields[2])*100
            #print(identity)
            mismatches = int(fields[4])
            identical_residues = int(alignment_length - mismatches)
            pid = float(identical_residues*100/alignment_length)
            #print("pid  " + str(pid))
            identity_threshold = calculate_identity_threshold(alignment_length, pid)
            if identity_threshold >= 0:
            	filtered_alignments.append(line)

    with open(output_filename, 'w') as output_file:
        for alignment in filtered_alignments:
            output_file.write(alignment)

# Usage 
alignment_file = 'scope_esmatlas_filtered_by_e_value_and_alignment_lenght'
filtered_file = 'scope_esmatlas_filtered'

filter_alignments(alignment_file, filtered_file)

print("Filtered alignments have been saved to", filtered_file)
